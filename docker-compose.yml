version: '3.8'

services:

  # --- DATABASES ---
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sportdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/sportdb?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # --- AIRFLOW ---
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      - postgres
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password@postgres:5432/sportdb
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./great_expectations:/opt/airflow/great_expectations
    restart: on-failure

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - postgres
      - airflow-init
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password@postgres:5432/sportdb
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=airflow-statsd
      - AIRFLOW__METRICS__STATSD_PORT=8125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./great_expectations:/opt/airflow/great_expectations
    ports:
      - "8081:8080"
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - airflow-webserver
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password@postgres:5432/sportdb
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=airflow-statsd
      - AIRFLOW__METRICS__STATSD_PORT=8125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./great_expectations:/opt/airflow/great_expectations
    command: scheduler

  airflow-statsd:
    image: prom/statsd-exporter
    container_name: airflow_statsd
    ports:
      - "9102:9102"
    command: --statsd.listen-udp=:8125 --web.listen-address=:9102

  # --- BATCH PROCESSING ---
  enrich_rh:
    build:
      context: .
      dockerfile: Dockerfile.enrich
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    depends_on:
      - postgres
    restart: "no"

  great_expectations:
    build:
      context: .
      dockerfile: Dockerfile.greatexp
    volumes:
      - ./great_expectations:/opt/airflow/great_expectations
      - ./data:/app/data
    stdin_open: true
    tty: true
    command: sleep infinity

  # --- MONITORING ---
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - postgres-exporter
      - airflow-statsd
      - cadvisor

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8082:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  postgres_data:
