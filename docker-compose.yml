version: '3.8'


services:

  # --- DATABASES ---
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sportdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080


  # --- MONITORING ---

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/sportdb?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  airflow-exporter:
    build:
      context: .
      dockerfile: Dockerfile.airflow_exporter
    container_name: airflow_exporter
    ports:
      - "9112:9112"
    environment:
      - AIRFLOW_URL=http://airflow-webserver:8080
      - AIRFLOW_USER=admin
      - AIRFLOW_PASSWORD=admin
    depends_on:
      - airflow-webserver

  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"


  # --- AIRFLOW ---
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      - postgres
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password@postgres:5432/sportdb
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=airflow-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./great_expectations:/opt/airflow/great_expectations
    restart: on-failure
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      - postgres
      - airflow-init
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password@postgres:5432/sportdb
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=airflow-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./great_expectations:/opt/airflow/great_expectations
    ports:
      - "8081:8080"
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      - airflow-webserver
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password@postgres:5432/sportdb
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=airflow-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./great_expectations:/opt/airflow/great_expectations
    command: scheduler

  enrich_rh:
    build:
      context: .
      dockerfile: Dockerfile.enrich
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    depends_on:
      - postgres
    restart: "no"

  great_expectations:
    build:
      context: .
      dockerfile: Dockerfile.greatexp
    volumes:
      - ./great_expectations:/opt/airflow/great_expectations
      - ./data:/app/data
    stdin_open: true
    tty: true
    command: sleep infinity

volumes:
  postgres_data:
  grafana_data:
